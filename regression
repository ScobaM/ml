Для использования лагов (лаговые переменные или lag features) при создании набора данных для обучения модели предсказания временного ряда, вам необходимо добавить отстающие значения зависимой переменной (нагрузки на станции метро) в качестве дополнительных признаков. Ниже приведен пример кода, который показывает, как создать набор данных с использованием лагов для обучения модели линейной регрессии:

python
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

# Загрузка данных
data = pd.read_csv('metro_data.csv')  # предположим, что у вас есть файл metro_data.csv с данными о нагрузке станций метро

# Добавление лагов
lags = 5  # количество лагов
for i in range(1, lags+1):
    data[f'Load_lag{i}'] = data['Load'].shift(i)

data = data.dropna()  # удаляем строки с пропущенными значениями

# Подготовка признаков и целевой переменной
X = data.drop(['Date', 'Load'], axis=1)
y = data['Load']

# Разделение данных на обучающий и тестовый набор
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Построение модели линейной регрессии
model = LinearRegression()
model.fit(X_train, y_train)

# Делаем предсказания
predictions = model.predict(X_test)

# Оценка модели
mse = mean_squared_error(y_test, predictions)
print("Среднеквадратичная ошибка:", mse)

# Визуализация результатов
plt.figure(figsize=(10, 6))
plt.plot(y_test.values, label='Фактические значения', color='blue')
plt.plot(predictions, label='Предсказания', color='red')
plt.xlabel('Номер образца')
plt.ylabel('Нагрузка')
plt.title('Прогноз нагрузки станции метро')
plt.legend()
plt.show()


В этом коде мы добавляем лаговые переменные в качестве дополнительных признаков в набор данных. Затем мы удаляем строки с пропущенными значениями, подготавливаем признаки и целевую переменную, обучаем модель линейной регрессии, делаем предсказания и оцениваем результаты с использованием среднеквадратичной ошибки. Наконец, мы визуализируем фактические значения и предсказания на графике. Помните, что количество и размерность лагов могут варьироваться в зависимости от вашей конкретной задачи.
